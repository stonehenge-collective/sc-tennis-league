name: "✅ Match verification"

on:
  pull_request_review:
    types: [submitted, edited, dismissed]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  match-verification:
    name: match-verification
    runs-on: ubuntu-latest
    steps:
      - name: Decide applicability (branch starts with match/)
        id: decide
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const {owner, repo} = context.repo;
            let prNumber = undefined;
            if (context.payload.pull_request) prNumber = context.payload.pull_request.number;
            else if (context.payload.issue && context.payload.issue.pull_request) prNumber = context.payload.issue.number;
            if (!prNumber) {
              core.setOutput('apply', 'false');
            } else {
              const pr = (await github.rest.pulls.get({owner, repo, pull_number: prNumber})).data;
              const ref = (pr.head && pr.head.ref) || '';
              const apply = ref.startsWith('match/');
              core.info(`branch: ${ref} → apply verification: ${apply}`);
              core.setOutput('apply', apply ? 'true' : 'false');
            }

      - name: Not applicable — passing check
        if: steps.decide.outputs.apply == 'false'
        run: echo "match-verification skipped because branch does not start with 'match/'."

      - name: Checkout repository
        if: steps.decide.outputs.apply == 'true'
        uses: actions/checkout@v4

      - name: Setup Python
        if: steps.decide.outputs.apply == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        if: steps.decide.outputs.apply == 'true'
        run: pip install -r requirements.txt

      - name: Evaluate dual-approval status
        if: steps.decide.outputs.apply == 'true'
        run: python -m scripts.verify_match
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

